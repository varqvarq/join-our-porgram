(()=>{var t={450:()=>{onmessage=function(t){console.log(t.data)}},746:()=>{function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,n(o.key),o)}}function n(e){var n=function(e,n){if("object"!=t(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!=t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==t(n)?n:String(n)}function r(t){var e="function"==typeof Map?new Map:void 0;return r=function(t){if(null===t||!function(t){try{return-1!==Function.toString.call(t).indexOf("[native code]")}catch(e){return"function"==typeof t}}(t))return t;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,n)}function n(){return function(t,e,n){if(o())return Reflect.construct.apply(null,arguments);var r=[null];r.push.apply(r,e);var a=new(t.bind.apply(t,r));return n&&i(a,n.prototype),a}(t,arguments,a(this).constructor)}return n.prototype=Object.create(t.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),i(n,t)},r(t)}function o(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(o=function(){return!!t})()}function i(t,e){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},i(t,e)}function a(t){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},a(t)}var c=function(n){function r(){var e,n,i,c;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,r),(n=this,i=r,i=a(i),e=function(e,n){if(n&&("object"===t(n)||"function"==typeof n))return n;if(void 0!==n)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(e)}(n,o()?Reflect.construct(i,c||[],a(n).constructor):i.apply(n,c))).attachShadow({mode:"open"}),e}var c,u;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&i(t,e)}(r,n),c=r,(u=[{key:"connectedCallback",value:function(){var t=this.getAttribute("title"),e=this.getAttribute("description");if(!t)throw new Error("error");var n=this.getAttribute("section"),r='<h2 class="app-title">'.concat(t,"</h2>"),o='<h3 class="app-subtitle">'.concat(e,"</h3>");"read-more"===n&&(r='<h2 class="app-title app-title--dark">'.concat(t,"</h2>"),o='<h3 class="app-subtitle app-subtitle--dark">'.concat(e,"</h3>")),this.shadowRoot.innerHTML='\n      <link rel="stylesheet" href="main.css">\n      <slot name="logo"></slot>\n      '.concat(r,'\n      <slot name="our-culture-btn"></slot>\n      ').concat(o,'\n      <slot name="article"></slot>\n      <slot name="read-more-btn"></slot>\n      ')}}])&&e(c.prototype,u),Object.defineProperty(c,"prototype",{writable:!1}),r}(r(HTMLElement));customElements.define("website-section",c)}},e={};function n(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={exports:{}};return t[r](i,i.exports,n),i.exports}(()=>{"use strict";n(746);var t=["gmail.com","outlook.com","yandex.ru"];function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function o(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,a(r.key),r)}}function i(t,e,n){return e&&o(t.prototype,e),n&&o(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t}function a(t){var n=function(t,n){if("object"!=e(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!=e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(n)?n:String(n)}var c=function(){function e(t,n){r(this,e),this.title=t||"Join Our Program",this.buttonText=n||"subscribe",this.section=null}return i(e,[{key:"createSection",value:function(){var e=document.createElement("section"),n=document.createElement("h2"),r=document.createElement("h3"),o=document.createElement("form"),i=document.createElement("input"),a=document.createElement("button");e.className="app-section app-section--join-our-program",n.className="app-title",n.innerHTML=this.title,r.className="app-subtitle",r.innerHTML="Sed do eiusmod tempor incididunt<br>ut labore et dolore magna aliqua.",o.className="app-section__form not-sub",i.className="app-section__form-input",i.placeholder="Email",i.required=!0,i.type="email",i.value=localStorage.getItem("email"),a.className="app-section__button app-section__button--join-op",a.innerHTML=this.buttonText;var c=function(){var t=localStorage.getItem("email");o.classList.contains("not-sub")&&t?(o.classList.toggle("not-sub"),a.innerHTML="unsubscribe",i.style.display="none",localStorage.setItem("sub",!0)):(o.classList.toggle("not-sub"),i.style.display="",i.value="",localStorage.clear())};return i.addEventListener("input",(function(t){localStorage.setItem("email",i.value)})),o.addEventListener("submit",(function(e){e.preventDefault(),!function(e){var n=e.split("@")[1];return t.includes(n)}(i.value)?alert("Enter a correct email"):c()})),localStorage.getItem("sub")&&c(),o.append(i,a),e.append(n,r,o),this.section=e,e}},{key:"remove",value:function(){this.section&&this.section.remove()}}]),e}();const u=function(){function t(){r(this,t),this.standard=new c,this.advanced=new c("Join Our Advanced Program","Subscribe to Advanced Program")}return i(t,[{key:"create",value:function(t){switch(t){case"standard":return this.standard.createSection();case"advanced":return this.advanced.createSection();default:throw new Error("Invalid section type")}}}]),t}();n(450);var l=(new u).create("standard");if(document.querySelector(".app-footer").before(l),window.Worker){var s=new Worker("web-worker.js"),p=document.querySelectorAll("button"),f=document.querySelector("input");console.log(p),console.log(f),p.forEach((function(t){t.addEventListener("click",(function(e){s.postMessage({eventType:"click",target:t.className})}))})),f.addEventListener("input",(function(t){s.postMessage({type:"input",target:f.className})}))}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,